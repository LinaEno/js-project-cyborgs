{"mappings":"0fACO,MAAMA,EAAO,CAChBC,cAAeC,SAASC,cAAc,sBACtCC,YAAaF,SAASC,cAAc,oBACpCE,YAAaH,SAASC,cAAc,eCFlCG,EAAa,CACf,CAAEC,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,UACnB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,MAAOC,KAAM,SACnB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,IAAKC,KAAM,mBACjB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,GAAIC,KAAM,YAab,SAASC,EAAaC,GAE3B,MAAMC,EAASD,EACZE,KAAIC,GACI,mCAAmCA,EAAKN,sIAIHM,EAAKC,2HAIlBD,EAAKE,iDAtBnC,SAAuBC,EAAYC,GACxC,MAAMC,EAAaF,EAAWG,QAAO,CAACC,EAAKC,IACrCJ,EAASK,SAASD,EAAMd,IACnB,IAAIa,EAAKC,EAAMb,MAEjBY,GACN,IACH,OAAOF,EAAWK,OAAS,EAAIL,EAAWM,MAAM,EAAG,GAAG,SAAWN,C,CAgBhCO,CAAcnB,EAAYO,EAAKa,gBAAgBb,EAAKc,kDACzDd,EAAKe,aAAaC,QAAQ,0BAGnDC,KAAK,IAER,OADA9B,EAAKK,YAAY0B,mBAAmB,YAAapB,GAC1CA,C,CClDTX,EAAKC,cAAc+B,iBAAiB,SAIpC,WACI,MAAMtB,EAAQuB,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GAC7D,IAAK1B,EAAMa,OAEP,YADAvB,EAAKK,YAAYgC,UAAY,aAGjC5B,EAAaC,E,IARjBV,EAAKI,YAAY4B,iBAAiB,SAWlC,WACI,MAAMtB,EAAQuB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAC3D,IAAK1B,EAAMa,OAEP,YADAvB,EAAKK,YAAYgC,UAAY,aAGjC5B,EAAaC,E","sources":["src/js/refs-lib.js","src/js/renderLib.js","src/js/lS-lib.js"],"sourcesContent":["\nexport const refs = {\n    watchedBtnLib: document.querySelector('[data-lib-watched]'),\n    queueBtnLib: document.querySelector('[data-lib-queue]'),\n    filmLibList: document.querySelector('.film-list'),\n}","import { refs } from \"./refs-lib\";\n\nconst genresInfo = [\n    { id: 28, name: 'Action' },\n    { id: 12, name: 'Adventure' },\n    { id: 16, name: 'Animation' },\n    { id: 35, name: 'Comedy' },\n    { id: 80, name: 'Crime' },\n    { id: 99, name: 'Documentary' },\n    { id: 18, name: 'Drama' },\n    { id: 10751, name: 'Family' },\n    { id: 14, name: 'Fantasy' },\n    { id: 36, name: 'History' },\n    { id: 27, name: 'Horror' },\n    { id: 10402, name: 'Music' },\n    { id: 9648, name: 'Mystery' },\n    { id: 10749, name: 'Romance' },\n    { id: 878, name: 'Science Fiction' },\n    { id: 10770, name: 'TV Movie' },\n    { id: 53, name: 'Thriller' },\n    { id: 10752, name: 'War' },\n    { id: 37, name: 'Western' },\n];\n\nexport function getGenresName(genresInfo, genreIds) {\n  const genresName = genresInfo.reduce((acc, genre) => {\n    if (genreIds.includes(genre.id)) {\n      return [...acc, genre.name];\n    }\n    return acc;\n  }, []);\n  return genresName.length > 2 ? genresName.slice(0, 2)+\",Other\" : genresName;\n}\n\nexport function renderMarkup(films) { \n  \n  const markup = films \n    .map(film => { \n      return `<li class=\"cards__item\" data-id=${film.id}> \n          <img \n            class=\"cards__photo\" \n            alt=\"film\" \n            src=\"https://image.tmdb.org/t/p/w500${film.poster_path}\" \n            width=\"395\" \n            loading=\"lazy\" \n          /> \n          <h3 class=\"cards__title\">${film.title}</h3> \n          <p class=\"cards__info\">${getGenresName(genresInfo, film.genre_ids)} | ${film.release_date}</p> \n          <p class=\"rating\">${film.vote_average.toFixed(1)}</p>\n        </li>`; \n    }) \n    .join(''); \n  refs.filmLibList.insertAdjacentHTML('beforeend', markup); \n  return markup; \n} ","import { renderMarkup } from \"./renderLib\";\nimport { refs } from \"./refs-lib\";\n\nrefs.watchedBtnLib.addEventListener('click', renderWatchedFilms);\n\nrefs.queueBtnLib.addEventListener('click', renderQueueFilms);\n\nfunction renderWatchedFilms() {\n    const films = JSON.parse(localStorage.getItem(\"watched\")) || [];\n    if (!films.length) {\n        refs.filmLibList.innerHTML = \"Not films\"\n        return;\n    }\n    renderMarkup(films);\n}\n\nfunction renderQueueFilms() {\n    const films = JSON.parse(localStorage.getItem(\"queue\")) || [];\n    if (!films.length) {\n        refs.filmLibList.innerHTML = \"Not films\"\n        return\n    }\n    renderMarkup(films);\n}"],"names":["$46347076cc9f8e85$export$21666b427502ea6d","watchedBtnLib","document","querySelector","queueBtnLib","filmLibList","$bbadd28dbdeb8bd5$var$genresInfo","id","name","$bbadd28dbdeb8bd5$export$add40575555c273c","films","markup","map","film","poster_path","title","genresInfo1","genreIds","genresName","reduce","acc","genre","includes","length","slice","$bbadd28dbdeb8bd5$export$8de900fd9affe02f","genre_ids","release_date","vote_average","toFixed","join","insertAdjacentHTML","addEventListener","JSON","parse","localStorage","getItem","innerHTML"],"version":3,"file":"library.a41127d7.js.map"}